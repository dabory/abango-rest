package models_elastic

import (
	"encoding/json"
	"errors"

	e "github.com/dabory/abango-rest/etc"
	dbrspd "github.com/dabory/abango-rest/spider"
	"github.com/elastic/go-elasticsearch/v7"
)

func (t *dbrspd.SchDitem) TableName() string { // 반드시 있어야 table name을 가져올 수 있다.
	return e.TableName(*t)
}

func (t *dbrspd.SchDitem) RecordName() string { //필수
	return "Id of " + t.Id + " in " + e.TableName(*t) + " "
}

func (t *dbrspd.SchDitem) GetaRow(y *elasticsearch.Client) error {

	res, err := y.Get(e.TableName(*t), t.Id)
	defer res.Body.Close()

	if err != nil {
		return e.LogErr("qrlhbdft", "Error of index: "+t.TableName()+": ", err)
	} else {
		if res.IsError() { //NotFound
			return errors.New(e.RecNotFound("qrhbdfke4k", "in "+t.TableName()+" of Id: "+t.Id))
		}
	}

	var resJs SchDitemRow
	if err := json.NewDecoder(res.Body).Decode(&resJs); err != nil {
		return e.LogErr("qrlhbdfk", "Error decoding "+t.TableName()+": ", err)
	}

	*t = resJs.Source
	return nil
}

// func (t *dbrspd.SchDitem) AddaRow(y *elasticsearch.Client) error {

// 	data, _ := json.Marshal(t)
// 	res, err := y.Index(
// 		e.TableName(*t),
// 		bytes.NewReader(data),
// 		y.Index.WithDocumentID((t.Id)))
// 	defer res.Body.Close()

// 	if err != nil {
// 		return errors.New(e.RecAddErr("jfhgytg", t.RecordName()+err.Error()))
// 	}
// 	return nil

// }

// func (t *dbrspd.SchDitem) DelaRow(y *elasticsearch.Client) error {

// 	res, err := y.Delete(e.TableName(*t), t.Id)
// 	defer res.Body.Close()

// 	if err != nil {
// 		return errors.New(e.RecAddErr("jfhgy4tg", t.RecordName()+err.Error()))
// 	}
// 	return nil
// }
